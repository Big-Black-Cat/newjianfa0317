{
	"name": "testuntil",
	"properties": {
		"activities": [
			{
				"name": "startpipline",
				"type": "Wait",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 10
				}
			},
			{
				"name": "Until1",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "startpipline",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(activity('Lookup1').output.firstRow.count01,500)",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Waitstart_in_until",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						},
						{
							"name": "Lookup1",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Waitstart_in_until",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": "  select COUNT(first_name) as count01 from visits;",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSqlTable3",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "Stored procedure1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Lookup1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[insert_visits]"
							},
							"linkedServiceName": {
								"referenceName": "testsqlserverzhcn",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Lookup1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(activity('Lookup1').output.firstRow.count01,0)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Execute Pipeline1",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "testuntilpipline",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true
										}
									},
									{
										"name": "Wait_in_if",
										"type": "Wait",
										"dependsOn": [
											{
												"activity": "Execute Pipeline1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 2
										}
									}
								]
							}
						},
						{
							"name": "result_same",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Lookup1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "result_same",
								"value": {
									"value": "@greater(activity('Lookup1').output.firstRow.count01,50)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "result_different",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Lookup1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "result_different",
								"value": {
									"value": "@lessOrEquals(activity('Lookup1').output.firstRow.count01,50)",
									"type": "Expression"
								}
							}
						}
					],
					"timeout": "0.8:00:00"
				}
			},
			{
				"name": "endpipline",
				"type": "Wait",
				"dependsOn": [
					{
						"activity": "Until1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 1
				}
			}
		],
		"variables": {
			"result_same": {
				"type": "Boolean"
			},
			"result_different": {
				"type": "Boolean"
			}
		},
		"annotations": [],
		"lastPublishTime": "2022-11-30T01:15:22Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}